cryptomonitor.streaming.window.size.seconds=10
cryptomonitor.streaming.window.advance.seconds=1

cryptomonitor.input.topic=price-ticks

cryptomonitor.kafka.state-store.name=price-difference-store

spring.cloud.stream.kafka.streams.bindings.requests-in.consumer.application-id=cryptomonitor
spring.cloud.stream.bindings.processor-in-0.destination=${cryptomonitor.input.topic}
spring.cloud.stream.kafka.streams.bindings.processor-in-0.consumer.timestampExtractorBeanName=priceTickTimestampExtractor
spring.cloud.stream.kafka.streams.binder.brokers=${spring.cloud.stream.kafka.streams.binder.brokers:localhost:9092}
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.springframework.kafka.support.serializer.JsonSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

